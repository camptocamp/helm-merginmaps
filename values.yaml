ingress: &ingress {}
ingress-test: *ingress

global:
  image:
    pullPolicy: Always

pvc:
  storageClass: azurefile-csi-nobrl
  size: 200Gi
  accessModes:
  - ReadWriteMany

frontend:
  ingress:
    enabled: false
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      ingress.kubernetes.io/ssl-redirect: 'true'
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.tls: 'true'

  services:
    frontend:
      enabled: true
      replicaCount: 1

      podLabels:
        team: gmf

      ingress:
        enabled: false
        path: /

      service:
        type: ClusterIP
        servicePort: 8080
        ports:
        - name: http
          port: 8080
          protocol: TCP
          targetPort: 8080

      containers:
        frontend:
          image:
            repository: camptocamp/merginmaps-frontend
            tag: "20240604"

          readinessProbe:
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 20

          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi

          ports:
            http:
              containerPort: 8080
              protocol: TCP

          volumeMounts:
            /data:
              name: datadir
            /etc/nginx/conf.d:
              name: nginx-conf

      volumes:
        datadir:
          persistentVolumeClaim:
            claimName: merginmaps-data
        nginx-conf:
          configMap:
            name: merginmaps-nginx-conf

server:
  ingress:
    enabled: false

  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 901
    runAsGroup: 901
    fsGroup: 901
    fsGroupChangePolicy: OnRootMismatch

  services:
    server:
      enabled: true
      replicaCount: 1

      podLabels:
        team: gmf

      ingress:
        enabled: false

      service:
        type: ClusterIP
        servicePort: 8080
        ports:
        - name: http
          port: 8080
          protocol: TCP
          targetPort: 8080

      containers:
        server:
          image:
            repository: camptocamp/merginmap-backend
            tag: "v0.1.0"

          env:
            COLLECT_STATISTICS:
              value: 'false'
            DEFAULT_STORAGE_SIZE:
              value: '100000000'
            GEODIFF_LOGGER_LEVEL:
              value: '2'
            GLOBAL_READ:
              value: 'false'
            GLOBAL_STORAGE:
              value: '210748364800'
            GLOBAL_WORKSPACE:
              value: mergin
            GLOBAL_WRITE:
              value: 'false'
            LOCAL_PROJECT:
              value: /data
            MAINTENANCE_FILE:
              value: /data/MAINTENANCE
            MAX_CHUNK_SIZE:
              value: '10485760'
            MAIL_SUPPRESS_SEND:
              value: '1'
            TEMP_DIR:
              value: /data/tmp
            USER_SELF_REGISTRATION:
              value: '1'
            USE_X_ACCEL:
              value: 'true'
            VERSION:
              value: 2023.6.1

          readinessProbe:
            httpGet:
              path: /ping
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 20

          livenessProbe:
            exec:
              command:
              - curl
              - -X POST
              - 0.0.0.0:8080/alive
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 20

          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 1
              memory: 2Gi

          ports:
            http:
              containerPort: 8080
              protocol: TCP

          volumeMounts:
            /data:
              name: datadir

      volumes:
        datadir:
          persistentVolumeClaim:
            claimName: merginmaps-data

