name: Continuous integration

on:
  push:
  pull_request:

permissions:
  actions: write
  contents: write

env:
  HAS_SECRETS: ${{ secrets.HAS_SECRETS }}

jobs:
  main:
    name: Continuous integration
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    if: "!startsWith(github.event.head_commit.message, '[skip ci] ')"

    strategy:
      fail-fast: true
      matrix:
        helm:
        - latest
        - 3.11.0

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true

    - uses: camptocamp/initialise-gopass-summon-action@v2
      with:
        ci-gpg-private-key: ${{secrets.CI_GPG_PRIVATE_KEY}}
        github-gopass-ci-token: ${{secrets.GOPASS_CI_GITHUB_TOKEN}}
      if: env.HAS_SECRETS == 'HAS_SECRETS'

    - run: echo "${HOME}/.local/bin" >> ${GITHUB_PATH}
    - run: python3 -m pip install --user --requirement=ci/requirements.txt

    - uses: actions/cache@v4
      with:
        path: ~/.cache/pre-commit
        key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
        restore-keys: "pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}\npre-commit-"

    - name: Print environment information
      run: c2cciutils-env
      env:
        GITHUB_EVENT: ${{ toJson(github) }}

    - name: Install helm
      uses: azure/setup-helm@v4
      with:
        version: ${{ matrix.helm }}
    - run: helm dependency update .
    - run: helm lint .
    - run: helm template merginmaps .

    - name: Publish
      run: c2cciutils-publish
      if: matrix.helm == 'latest' && env.HAS_SECRETS == 'HAS_SECRETS'

    - run: git diff --exit-code --patch > /tmp/dpkg-versions.patch || true
      if: failure()

    - uses: actions/upload-artifact@v4
      with:
        name: Update dpkg versions list.patch
        path: /tmp/dpkg-versions.patch
        retention-days: 1
      if: failure()

    - name: Trigger changelog workflow
      uses: actions/github-script@v7
      with:
        script: |-
          if (process.env.GITHUB_REF_TYPE == 'tag') {
              console.log('Trigger changelog');
              await github.rest.repos.createDispatchEvent({
                  owner: 'camptocamp',
                  repo: 'helm-merginmaps',
                  event_type: 'changelog',
              });
          }
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: matrix.helm == 'latest' && env.HAS_SECRETS == 'HAS_SECRETS'
